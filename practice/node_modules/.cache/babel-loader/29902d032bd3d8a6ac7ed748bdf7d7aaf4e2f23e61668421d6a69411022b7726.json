{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\likal\\\\OneDrive\\\\Desktop\\\\WebVulture\\\\practice\\\\src\\\\context.js\",\n  _s = $RefreshSig$();\n// SliderContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  // Define state for slider value, button click count, and theme\n  const [attackValue, setAttackValue] = useState(1);\n\n  // Handlers to update the values\n  const handleAttackChange = (event, newValue) => {\n    setAttackValue(newValue);\n  };\n\n  //THREADS\n  const [threadValue, setThreadValue] = useState(1);\n\n  // Handlers to update the values\n  const handleThreadChange = (event, newValue) => {\n    setThreadValue(newValue);\n  };\n\n  // Code for checkboxes context\n\n  const [isFlushChecked, setIsFlushChecked] = useState(false);\n  const toggleFlushCheckbox = () => {\n    console.log('flushchecked');\n    setIsFlushChecked(prev => !prev);\n  };\n\n  // Code for checkboxes context\n\n  const [isDumpChecked, setIsDumpChecked] = useState(false);\n  const toggleDumpCheckbox = () => {\n    console.log('dumpchecked');\n    setIsDumpChecked(prev => !prev);\n  };\n\n  //Code for url input\n\n  const [urlValue, setUrlValue] = useState(\"\");\n  const handleUrlChange = event => {\n    setUrlValue(event.target.value);\n  };\n\n  //Code for manual command input\n\n  const [cmdValue, setCmdValue] = useState(\"\");\n  const handleCmdChange = event => {\n    setCmdValue(event.target.value);\n  };\n\n  // send button context\n\n  const handleSend = () => {\n    console.log('Button clicked!');\n    console.log(attackValue);\n    console.log(threadValue);\n    console.log(isFlushChecked);\n    console.log(isDumpChecked);\n    console.log(urlValue);\n    console.log(cmdValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      attackValue,\n      handleAttackChange,\n      threadValue,\n      handleThreadChange,\n      isFlushChecked,\n      toggleFlushCheckbox,\n      isDumpChecked,\n      toggleDumpCheckbox,\n      urlValue,\n      handleUrlChange,\n      cmdValue,\n      handleCmdChange,\n      handleSend\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"Dw9H1cfHmQy07faG7Rh6IHPFUfs=\");\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","Context","ContextProvider","children","_s","attackValue","setAttackValue","handleAttackChange","event","newValue","threadValue","setThreadValue","handleThreadChange","isFlushChecked","setIsFlushChecked","toggleFlushCheckbox","console","log","prev","isDumpChecked","setIsDumpChecked","toggleDumpCheckbox","urlValue","setUrlValue","handleUrlChange","target","value","cmdValue","setCmdValue","handleCmdChange","handleSend","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/likal/OneDrive/Desktop/WebVulture/practice/src/context.js"],"sourcesContent":["// SliderContext.js\r\nimport React, { createContext, useState } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  // Define state for slider value, button click count, and theme\r\n  const [attackValue, setAttackValue] = useState(1);\r\n\r\n  // Handlers to update the values\r\n  const handleAttackChange = (event, newValue) => {\r\n    setAttackValue(newValue);\r\n  };\r\n\r\n  //THREADS\r\n  const [threadValue, setThreadValue] = useState(1);\r\n\r\n  // Handlers to update the values\r\n  const handleThreadChange = (event, newValue) => {\r\n    setThreadValue(newValue);\r\n  };\r\n\r\n  // Code for checkboxes context\r\n\r\n  const [isFlushChecked, setIsFlushChecked] = useState(false);\r\n\r\n  const toggleFlushCheckbox = () => {\r\n      console.log('flushchecked')\r\n      setIsFlushChecked((prev) => !prev);\r\n  };\r\n\r\n\r\n  // Code for checkboxes context\r\n\r\n  const [isDumpChecked, setIsDumpChecked] = useState(false);\r\n\r\n  const toggleDumpCheckbox = () => {\r\n      console.log('dumpchecked')\r\n      setIsDumpChecked((prev) => !prev);\r\n  };\r\n\r\n\r\n  //Code for url input\r\n\r\n  const [urlValue, setUrlValue] = useState(\"\");\r\n\r\n  const handleUrlChange = (event) => {\r\n    setUrlValue(event.target.value);\r\n  }\r\n\r\n  //Code for manual command input\r\n\r\n  const [cmdValue, setCmdValue] = useState(\"\");\r\n\r\n  const handleCmdChange = (event) => {\r\n    setCmdValue(event.target.value);\r\n  }\r\n\r\n\r\n  // send button context\r\n\r\n  const handleSend= () => {\r\n    console.log('Button clicked!');\r\n    console.log(attackValue);\r\n    console.log(threadValue);\r\n    console.log(isFlushChecked);\r\n    console.log(isDumpChecked);\r\n    console.log(urlValue);\r\n    console.log(cmdValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        attackValue,\r\n        handleAttackChange,\r\n\r\n        threadValue,\r\n        handleThreadChange,\r\n\r\n        isFlushChecked,\r\n        toggleFlushCheckbox,\r\n        \r\n        isDumpChecked,\r\n        toggleDumpCheckbox,\r\n\r\n        urlValue,\r\n        handleUrlChange,\r\n\r\n        cmdValue,\r\n        handleCmdChange,\r\n\r\n        handleSend,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMS,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC9CH,cAAc,CAACG,QAAQ,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMc,kBAAkB,GAAGA,CAACJ,KAAK,EAAEC,QAAQ,KAAK;IAC9CE,cAAc,CAACF,QAAQ,CAAC;EAC1B,CAAC;;EAED;;EAEA,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMiB,mBAAmB,GAAGA,CAAA,KAAM;IAC9BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BH,iBAAiB,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC;EACtC,CAAC;;EAGD;;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMuB,kBAAkB,GAAGA,CAAA,KAAM;IAC7BL,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BG,gBAAgB,CAAEF,IAAI,IAAK,CAACA,IAAI,CAAC;EACrC,CAAC;;EAGD;;EAEA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM0B,eAAe,GAAIhB,KAAK,IAAK;IACjCe,WAAW,CAACf,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM+B,eAAe,GAAIrB,KAAK,IAAK;IACjCoB,WAAW,CAACpB,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAGD;;EAEA,MAAMI,UAAU,GAAEA,CAAA,KAAM;IACtBd,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;IACxBW,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;IACxBM,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;IAC3BG,OAAO,CAACC,GAAG,CAACE,aAAa,CAAC;IAC1BH,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;IACrBN,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;EACvB,CAAC;EAGD,oBACE3B,OAAA,CAACC,OAAO,CAAC8B,QAAQ;IACfL,KAAK,EAAE;MACLrB,WAAW;MACXE,kBAAkB;MAElBG,WAAW;MACXE,kBAAkB;MAElBC,cAAc;MACdE,mBAAmB;MAEnBI,aAAa;MACbE,kBAAkB;MAElBC,QAAQ;MACRE,eAAe;MAEfG,QAAQ;MACRE,eAAe;MAEfC;IACF,CAAE;IAAA3B,QAAA,EAEDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEvB,CAAC;AAAC/B,EAAA,CA9FWF,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}